{"version":3,"sources":["components/total/Total.js","components/history/HistoryItem.js","components/history/History.js","components/operation/Operation.js","App.js","index.js"],"names":["Total","totalIncome","totalExpenses","totalBalance","className","HistoryItem","transaction","add","description","moneyAmount","History","transactions","map","item","id","Operation","addTransaction","addDescription","addAmount","onChange","type","placeholder","value","onClick","App","state","push","Date","toString","setState","getTotalBalance","e","parseFloat","target","getExpenses","reduce","acc","this","filter","getIncome","console","log","Fragment","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef30db36.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Total = ({totalIncome, totalExpenses, totalBalance}) => (\r\n    <section className=\"total\">\r\n        <header className=\"total__header\">\r\n            <h3>Баланс</h3>\r\n            <p className=\"total__balance\">{totalBalance} ₽</p>\r\n        </header>\r\n        <div className=\"total__main\">\r\n            <div className=\"total__main-item total__income\">\r\n                <h4>Доходы</h4>\r\n                <p className=\"total__money total__money-income\">\r\n                    {totalIncome} ₽\r\n                </p>\r\n            </div>\r\n            <div className=\"total__main-item total__expenses\">\r\n                <h4>Расходы</h4>\r\n                <p className=\"total__money total__money-expenses\">\r\n                    {totalExpenses} ₽\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </section>\r\n); //всё что в круглых скобках, возвращается (замена return). чтобы не писать в фигурных скобках\r\n\r\nexport default Total; //если export default, то имя функции при импорте может быть любым","import React from 'react';\r\n\r\nconst HistoryItem = ({transaction}) => (\r\n    <li className={`history__item ${transaction.add \r\n            ? 'history__item-plus' \r\n            : 'history__item-minus'}`\r\n        }\r\n        >{transaction.description}\r\n        <span className=\"history__money\">\r\n            {transaction.moneyAmount} ₽\r\n        </span>\r\n        <button className=\"history__delete\">x</button>\r\n    </li>\r\n)\r\n\r\nexport default HistoryItem;","import React from 'react';\r\nimport HistoryItem from './HistoryItem';\r\n\r\nexport const History = ({transactions}) => {\r\n  return(\r\n    <section className=\"history\">\r\n        <h3>История расходов</h3>\r\n        <ul className=\"history__list\">\r\n            {transactions.map(item=> /*map возвращает массив*/\r\n              <HistoryItem \r\n                key={item.id}\r\n                transaction={item}\r\n              />)}\r\n        </ul>\r\n    </section>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function Operation({addTransaction, addDescription, addAmount, description, moneyAmount}) { //деструктуризировали props и получили сразу нужную функцию\r\n  return(\r\n      <section className=\"operation\">\r\n      <h3>Новая операция</h3>\r\n      <form id=\"form\">\r\n          <label>\r\n              <input \r\n                onChange={addDescription}\r\n                type=\"text\" \r\n                className=\"operation__fields operation__name\" \r\n                placeholder=\"Наименование операции\"\r\n                value={description}\r\n              />\r\n          </label>\r\n          <label>\r\n              <input onChange={addAmount} type=\"number\" className=\"operation__fields operation__amount\" value={moneyAmount} placeholder=\"Введите сумму\"/>\r\n          </label>\r\n          <div className=\"operation__btns\">\r\n              <button onClick={() => addTransaction(false)} \r\n                type=\"button\" \r\n                className=\"operation__btn operation__btn-subtract\"\r\n                >РАСХОД</button>\r\n              <button onClick={() => addTransaction(true)} \r\n              type=\"button\" \r\n              className=\"operation__btn operation__btn-add\"\r\n              >ДОХОД</button>\r\n          </div>\r\n      </form>\r\n  </section>\r\n  )\r\n}","import React, {Component} from 'react';\n//демонстрация возможностей импорта функций\nimport Total /*имя может быть любым, без фигурных скобок т.к export default*/ from './components/total/Total';\nimport {History} /*имя строго, фигурные скобки, т.к export default*/ from './components/history/History';\nimport Operations /*имя может быть любым, без фигурных скобок, т.к export default*/ from './components/operation/Operation';\n\nclass App extends Component { //классы позволяют хранить состояния\n\n  state = {\n    transactions: [],\n    description: '',\n    moneyAmount: '',\n    totalIncome: 0, \n    totalExpenses: 0, \n    totalBalance: 0,\n  }\n\n  //этот метод мы передаем в Operation\n  addTransaction = add => {\n    const transactions = [...this.state.transactions]; //... - spread-оператор\n\n    transactions.push({ //пушим новую транзакцию\n      id: `cmr${(+new Date()).toString(16)}key`, //+ перед new Date нужен чтобы дата сразу переводилась в число. 16 переводит число в шестнадцатеричную систему\n      description: this.state.description,\n      moneyAmount: this.state.moneyAmount,\n      add\n    });\n\n    this.setState({\n      transactions, \n      description: '', \n      moneyAmount: '',\n    }, this.getTotalBalance);\n  }\n\n  addAmount = e => { //это асинхронная функция\n    this.setState({moneyAmount: parseFloat(e.target.value)}) //превращение строки в число\n  }\n\n  addDescription = e => { //это асинхронная функция\n    this.setState({description: e.target.value}) \n  }\n\n\n  getIncome() {\n    return this.state.transactions\n    .filter(item => item.add)\n    .reduce((acc, item) => item.moneyAmount + acc, 0) \n    //reduce собирает данные, аккумулирует их. \n    //0 - значение аккумулятора по дефолту\n    //если filter возвращает массив, то reduce возвращает число\n  }\n\n   //другой вариант со стрелочной функции(return не нужен) и сокращением числа итераций(функциональность та же)\n  getExpenses = () => this.state.transactions\n  .reduce((acc, item) => !item.add ? item.moneyAmount + acc : acc, 0);\n\n  getTotalBalance() {\n    const totalIncome = this.getIncome();\n    const totalExpenses = this.getExpenses();\n    const totalBalance = totalIncome - totalExpenses;\n\n    this.setState({\n      totalIncome,\n      totalExpenses,\n      totalBalance,\n    }, () => console.log(this.state));\n  }\n\n\n  //Local Storage\n  addStorage() {\n    \n  }\n\n  render() {\n    return (\n      /*эти треугольные скобки могут быть пустыми, т.к по умолчанию и так стоит React.Fragment*/\n      <React.Fragment> \n        <header>\n          <h1>Кошелек</h1>\n          <h2>Калькулятор расходов</h2>\n        </header>\n        <main>\n            <div className=\"container\">\n                <Total \n                  totalIncome = {this.state.totalIncome}\n                  totalExpenses = {this.state.totalExpenses}\n                  totalBalance = {this.state.totalBalance}\n                />\n                <History transactions = {this.state.transactions}/>\n                <Operations \n                  addTransaction={this.addTransaction}\n                  addDescription={this.addDescription}\n                  addAmount={this.addAmount}\n                  description={this.state.description}\n                  moneyAmount={this.state.moneyAmount}\n                />\n            </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","/*React - это фронт, после билда он превращается в обычный js файл*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}