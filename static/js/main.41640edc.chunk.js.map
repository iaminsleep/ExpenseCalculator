{"version":3,"sources":["components/total/Total.js","components/history/HistoryItem.js","components/history/History.js","components/operation/Operation.js","App.js","index.js"],"names":["Total","className","HistoryItem","transaction","add","description","moneyAmount","History","transactions","map","item","id","Operation","addTransaction","addDescription","addAmount","onChange","type","placeholder","value","onClick","App","state","push","Date","toString","setState","console","log","e","target","Fragment","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAyBeA,EAvBD,kBACV,0BAASC,UAAU,QAAnB,UACI,yBAAQA,UAAU,gBAAlB,UACI,sEACA,mBAAGA,UAAU,iBAAb,yBAEJ,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,sEACA,mBAAGA,UAAU,mCAAb,0BAIJ,sBAAKA,UAAU,mCAAf,UACI,4EACA,mBAAGA,UAAU,qCAAb,iCCFDC,EAbK,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAF,OAChB,qBAAIF,UAAS,wBAAmBE,EAAYC,IAClC,qBACA,uBAFV,UAIMD,EAAYE,YACd,uBAAMJ,UAAU,iBAAhB,UACKE,EAAYG,YADjB,aAGA,wBAAQL,UAAU,kBAAlB,mBCRKM,EAAU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACvB,OACE,0BAASP,UAAU,UAAnB,UACI,6HACA,oBAAIA,UAAU,gBAAd,SACKO,EAAaC,KAAI,SAAAC,GAAI,OACpB,aADuB,CACtB,EAAD,CAEEP,YAAaO,GADRA,EAAKC,aCRX,SAASC,EAAT,GAA2F,IAAvEC,EAAsE,EAAtEA,eAAgBC,EAAsD,EAAtDA,eAAgBC,EAAsC,EAAtCA,UAAWV,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YACzF,OACI,0BAASL,UAAU,YAAnB,UACA,iHACA,uBAAMU,GAAG,OAAT,UACI,gCACI,uBACEK,SAAUF,EACVG,KAAK,OACLhB,UAAU,oCACViB,YAAY,4HACZC,MAAOd,MAGb,gCACI,uBAAOW,SAAUD,EAAWE,KAAK,SAAShB,UAAU,sCAAsCkB,MAAOb,EAAaY,YAAY,gFAE9H,sBAAKjB,UAAU,kBAAf,UACI,wBAAQmB,QAAS,kBAAMP,GAAe,IACpCI,KAAK,SACLhB,UAAU,yCAFZ,kDAIA,wBAAQmB,QAAS,kBAAMP,GAAe,IACtCI,KAAK,SACLhB,UAAU,oCAFV,qD,IClBRoB,E,4MAEJC,MAAQ,CACNd,aAAc,GACdH,YAAa,GACbC,YAAa,I,EAIfO,eAAiB,SAAAT,GACf,IAAMI,EAAY,YAAO,EAAKc,MAAMd,cAEpCA,EAAae,KAAK,CAChBZ,GAAG,MAAD,SAAU,IAAIa,MAAMC,SAAS,IAA7B,OACFpB,YAAa,EAAKiB,MAAMjB,YACxBC,YAAa,EAAKgB,MAAMhB,YACxBF,QAGF,EAAKsB,SAAS,CAAClB,eAAcH,YAAa,GAAIC,YAAa,KAAK,kBAAMqB,QAAQC,IAAI,EAAKN,W,EAGzFP,UAAY,SAAAc,GACV,EAAKH,SAAS,CAACpB,YAAauB,EAAEC,OAAOX,S,EAGvCL,eAAiB,SAAAe,GACf,EAAKH,SAAS,CAACrB,YAAawB,EAAEC,OAAOX,S,4CAGvC,WACE,OAEE,cADA,CACC,IAAMY,SAAP,WACE,mCACE,4EACA,wJAEF,+BACI,sBAAK9B,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAASO,aAAgBwB,KAAKV,MAAMd,eACpC,cAACI,EAAD,CACEC,eAAgBmB,KAAKnB,eACrBC,eAAgBkB,KAAKlB,eACrBC,UAAWiB,KAAKjB,UAChBV,YAAa2B,KAAKV,MAAMjB,YACxBC,YAAa0B,KAAKV,MAAMhB,0B,GA/CxB2B,aAwDHZ,I,YCxDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41640edc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Total = () => (\r\n    <section className=\"total\">\r\n        <header className=\"total__header\">\r\n            <h3>Баланс</h3>\r\n            <p className=\"total__balance\">0 ₽</p>\r\n        </header>\r\n        <div className=\"total__main\">\r\n            <div className=\"total__main-item total__income\">\r\n                <h4>Доходы</h4>\r\n                <p className=\"total__money total__money-income\">\r\n                    +0 ₽\r\n                </p>\r\n            </div>\r\n            <div className=\"total__main-item total__expenses\">\r\n                <h4>Расходы</h4>\r\n                <p className=\"total__money total__money-expenses\">\r\n                    -0 ₽\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </section>\r\n); //всё что в круглых скобках, возвращается (замена return). чтобы не писать в фигурных скобках\r\n\r\nexport default Total; //если export default, то имя функции при импорте может быть любым","import React from 'react';\r\n\r\nconst HistoryItem = ({transaction}) => (\r\n    <li className={`history__item ${transaction.add \r\n            ? 'history__item-plus' \r\n            : 'history__item-minus'}`\r\n        }\r\n        >{transaction.description}\r\n        <span className=\"history__money\">\r\n            {transaction.moneyAmount} ₽\r\n        </span>\r\n        <button className=\"history__delete\">x</button>\r\n    </li>\r\n)\r\n\r\nexport default HistoryItem;","import React from 'react';\r\nimport HistoryItem from './HistoryItem';\r\n\r\nexport const History = ({transactions}) => {\r\n  return(\r\n    <section className=\"history\">\r\n        <h3>История расходов</h3>\r\n        <ul className=\"history__list\">\r\n            {transactions.map(item=> /*map возвращает массив*/\r\n              <HistoryItem \r\n                key={item.id}\r\n                transaction={item}\r\n              />)}\r\n        </ul>\r\n    </section>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function Operation({addTransaction, addDescription, addAmount, description, moneyAmount}) { //деструктуризировали props и получили сразу нужную функцию\r\n  return(\r\n      <section className=\"operation\">\r\n      <h3>Новая операция</h3>\r\n      <form id=\"form\">\r\n          <label>\r\n              <input \r\n                onChange={addDescription}\r\n                type=\"text\" \r\n                className=\"operation__fields operation__name\" \r\n                placeholder=\"Наименование операции\"\r\n                value={description}\r\n              />\r\n          </label>\r\n          <label>\r\n              <input onChange={addAmount} type=\"number\" className=\"operation__fields operation__amount\" value={moneyAmount} placeholder=\"Введите сумму\"/>\r\n          </label>\r\n          <div className=\"operation__btns\">\r\n              <button onClick={() => addTransaction(false)} \r\n                type=\"button\" \r\n                className=\"operation__btn operation__btn-subtract\"\r\n                >РАСХОД</button>\r\n              <button onClick={() => addTransaction(true)} \r\n              type=\"button\" \r\n              className=\"operation__btn operation__btn-add\"\r\n              >ДОХОД</button>\r\n          </div>\r\n      </form>\r\n  </section>\r\n  )\r\n}","import React, {Component} from 'react';\n//демонстрация возможностей импорта функций\nimport Total /*имя может быть любым, без фигурных скобок т.к export default*/ from './components/total/Total';\nimport {History} /*имя строго, фигурные скобки, т.к export default*/ from './components/history/History';\nimport Operations /*имя может быть любым, без фигурных скобок, т.к export default*/ from './components/operation/Operation';\n\nclass App extends Component { //классы позволяют хранить состояния\n\n  state = {\n    transactions: [],\n    description: '',\n    moneyAmount: '',\n  }\n\n  //именно этот метод мы передаем в Operation\n  addTransaction = add => {\n    const transactions = [...this.state.transactions]; //... - spread-оператор\n\n    transactions.push({ //пушим новую транзакцию\n      id: `cmr${(+new Date).toString(16)}key`, //+ перед new Date нужен чтобы дата сразу переводилась в число. 16 переводит число в шестнадцатеричную систему\n      description: this.state.description,\n      moneyAmount: this.state.moneyAmount,\n      add\n    });\n\n    this.setState({transactions, description: '', moneyAmount: ''}, () => console.log(this.state));\n  }\n\n  addAmount = e => { //это асинхронная функция\n    this.setState({moneyAmount: e.target.value}) \n  }\n\n  addDescription = e => { //это асинхронная функция\n    this.setState({description: e.target.value}) \n  }\n\n  render() {\n    return (\n      /*эти треугольные скобки могут быть пустыми, т.к по умолчанию и так стоит React.Fragment*/\n      <React.Fragment> \n        <header>\n          <h1>Кошелек</h1>\n          <h2>Калькулятор расходов</h2>\n        </header>\n        <main>\n            <div className=\"container\">\n                <Total/>\n                <History transactions = {this.state.transactions}/>\n                <Operations \n                  addTransaction={this.addTransaction}\n                  addDescription={this.addDescription}\n                  addAmount={this.addAmount}\n                  description={this.state.description}\n                  moneyAmount={this.state.moneyAmount}\n                />\n            </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}